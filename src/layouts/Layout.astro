---
// src/layouts/Layout.astro
import '../styles/global.css'; // Import the complete CSS with night sky

export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Arpita Patnaik - Portfolio" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<!-- <link rel="icon" type="image/svg+xml" href="${baseUrl}/favicon.svg" /> -->
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		
		<!-- Import Google Fonts -->
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Fira+Code:wght@400;500&display=swap" rel="stylesheet">
	</head>
	<body>
		<!-- Night Sky Background with Shooting Stars -->
		<div class="mesh-bg">
			<!-- Shooting Stars -->
			<div class="shooting-star"></div>
			<div class="shooting-star"></div>
			<div class="shooting-star"></div>
			<div class="shooting-star"></div>
			<div class="shooting-star"></div>
			
			<!-- Moon -->
			<div class="moon"></div>
			
			<!-- Clouds -->
			<div class="cloud cloud1"></div>
			<div class="cloud cloud2"></div>
			
			<!-- Nebula -->
			<div class="nebula"></div>
		</div>

		<slot />
		
		<script>
			// Global JavaScript for fade-in animations
			document.addEventListener('DOMContentLoaded', function() {
				const observerOptions = {
					threshold: 0.1,
					rootMargin: '0px 0px -50px 0px'
				};

				const observer = new IntersectionObserver(function(entries) {
					entries.forEach(function(entry) {
						if (entry.isIntersecting) {
							entry.target.classList.add('visible');
						}
					});
				}, observerOptions);

				document.querySelectorAll('.fade-in').forEach(function(el) {
					observer.observe(el);
				});

				// Enhanced parallax effect for night sky
				window.addEventListener('scroll', function() {
					const scrolled = window.pageYOffset;
					const parallax = document.querySelector('.mesh-bg');
					const moon = document.querySelector('.moon');
					const nebula = document.querySelector('.nebula');
					
					if (parallax) {
						parallax.style.transform = `translateY(${scrolled * 0.3}px)`;
					}
					
					// Moon parallax
					if (moon) {
						moon.style.transform = `translateY(${scrolled * 0.2}px)`;
					}
					
					// Nebula parallax
					if (nebula) {
						nebula.style.transform = `translateY(${scrolled * 0.4}px) scale(${1 + scrolled * 0.0005})`;
					}
				});

				// Create additional random shooting stars
				function createShootingStar() {
					const star = document.createElement('div');
					star.className = 'shooting-star';
					star.style.top = Math.random() * 50 + '%';
					star.style.left = Math.random() * 100 + '%';
					star.style.animationDelay = '0s';
					star.style.animationDuration = (Math.random() * 3 + 2) + 's';
					
					document.querySelector('.mesh-bg').appendChild(star);
					
					// Remove the star after animation
					setTimeout(() => {
						if (star.parentNode) {
							star.parentNode.removeChild(star);
						}
					}, 5000);
				}

				// Create random shooting stars every 8-15 seconds
				setInterval(() => {
					if (Math.random() > 0.7) { // 30% chance
						createShootingStar();
					}
				}, Math.random() * 7000 + 8000);
			});
		</script>
	</body>
</html>