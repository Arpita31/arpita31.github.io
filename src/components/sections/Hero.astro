---
import { personalInfo } from '../../data/personal.js';
import Button from '../ui/Button.astro';
import LottieAnimation from '../ui/LottieAnimation.astro';
---

<section id="home" class="hero">
  <div class="hero-content-wrapper">
    <div class="hero-text">
      <h1>{personalInfo.name}</h1>
      <p class="subtitle">{personalInfo.title}</p>
      <p class="description">{personalInfo.description}</p>
      <div class="cta-buttons">
        <Button variant="primary" href="#projects">Explore My Projects</Button>
        <Button variant="secondary" href="#contact">Let's Connect</Button>
      </div>
    </div>
    
    <div class="hero-visual">
      <LottieAnimation animationPath="/developer_animation.json" />
      
      <div class="achievement-badges">
        {personalInfo.achievements.map((achievement, index) => (
          <div class={`badge badge-${index + 1}`}>
            <div class="badge-value">{achievement.value}</div>
            <div class="badge-label">{achievement.label}</div>
          </div>
        ))}
      </div>
    </div>
  </div>
  
  <div class="tech-float">ðŸ§ </div>
  <div class="tech-float">âš¡</div>
  <div class="tech-float">ðŸš€</div>
  <div class="tech-float">ðŸ”¥</div>
</section>

<script>
  // Dynamic typing effect for hero subtitle
  const subtitleElement = document.querySelector('.hero .subtitle');
  if (subtitleElement) {
    const roles = [
      'ML/AI Engineer & Senior Software Developer',
      'Machine Learning Specialist',
      'Backend Systems Architect',
      'Computer Vision Engineer',
      'NLP & Data Science Expert',
      'Full-Stack AI Developer'
    ];

    let currentRoleIndex = 0;
    let isDeleting = false;
    let currentText = '';
    let typeSpeed = 100;

    function typeEffect() {
      const currentRole = roles[currentRoleIndex];
      
      if (isDeleting) {
        currentText = currentRole.substring(0, currentText.length - 1);
        typeSpeed = 50;
      } else {
        currentText = currentRole.substring(0, currentText.length + 1);
        typeSpeed = 100;
      }

      subtitleElement.textContent = currentText;

      if (!isDeleting && currentText === currentRole) {
        typeSpeed = 2000;
        isDeleting = true;
      } else if (isDeleting && currentText === '') {
        isDeleting = false;
        currentRoleIndex = (currentRoleIndex + 1) % roles.length;
        typeSpeed = 500;
      }

      setTimeout(typeEffect, typeSpeed);
    }

    setTimeout(typeEffect, 2000);
  }
</script>