---
// src/pages/index.astro - Fixed Version with 40% Image Layout
import Layout from '../layouts/Layout.astro';
import PerformanceOptimizer from '../components/PerformanceOptimizer.astro';

// Get the base URL from Astro environment for proper asset paths
const baseUrl = import.meta.env.BASE_URL;

// Personal data (you can move this to a separate file later)
const personalInfo = {
  name: "Arpita Patnaik",
  title: "ML/AI Engineer & Senior Software Developer",
  description: "With 5+ years of experience, I‚Äôm passionate about architecting intelligent systems that address real-world challenges and drive business results. I specialize in building scalable backend solutions, optimizing databases, and delivering impactful ML and NLP applications.",
  email: "patnaikarpita100@gmail.com",
  linkedin: "https://www.linkedin.com/in/arpitapatnaik10",
  github: "https://github.com/arpita31",
  achievements: [
    { value: "üí°"}, //label: "in Curiosity" },
    { value: "5+", label: "Years Exp" },
    { value: "üéØ"}//, label: "Latency ‚Üì" },

    // { value: "75%", label: "Latency ‚Üì" },
    // { value: "10+", label: "Projects" }
  ]
};

const projects = [
  {
    title: "M3: Mood Movie Matcher - AI Recommendation Engine",
    description: "Engineered intelligent movie recommendation system leveraging RoBERTa sentiment analysis and Autoencoders on MovieLens dataset. Features personalized matching algorithms and hidden gem discovery through advanced NLP and deep learning techniques.",
    icon: `${baseUrl}project-movie.jpg`, // ‚úÖ Fixed with base URL
    iconEmoji: "üé¨",
    technologies: ["Python", "PyTorch", "RoBERTa", "Transformers", "scikit-learn", "Machine Learning", "NLP"],
    github: "https://github.com/Arpita31/Mood-Movie-Matcher"
  },
  {
    title: "Safe Data Cloak - Enterprise Privacy AI System",
    description: "Built production-ready data privacy platform utilizing advanced NLP transformers for intelligent redaction of PII, sensitive data, and domain-specific information. Features enterprise API integration and ML-powered unredaction capabilities using Random Forest algorithms.",
    icon: `${baseUrl}project-privacy.jpg`, // ‚úÖ Fixed with base URL
    iconEmoji: "üîê",
    technologies: ["Python", "spaCy", "Transformers", "NLTK", "Random Forest", "scikit-learn", "sentence transformers"],
    github: "https://github.com/Arpita31/Safe-Data-Cloak"
  },
  {
    title: "CodedCore - Full-Stack Technical Platform",
    description: "Architected comprehensive blogging platform for algorithms and data structures education. Built with Django framework, PostgreSQL optimization, and responsive Bootstrap UI. Designed for scalability and optimal performance with advanced database management.",
    icon: `${baseUrl}project-codecore.jpg`, // ‚úÖ Fixed with base URL
    iconEmoji: "üíª",
    technologies: ["Python", "Django", "PostgreSQL", "Bootstrap", "Full-Stack", "Database Optimization"],
    github: "https://github.com/Arpita31/codedcore"
  },
  {
    title: "Computer Vision - Spherical Object Tracking",
    description: "Developed real-time computer vision application achieving accurate motion analysis and counting of spherical objects. Implemented advanced tracking algorithms using Java, JavaFX, and OpenCV for precise directional movement detection and analysis.",
    icon: `${baseUrl}project-vision.jpg`, // ‚úÖ Fixed with base URL
    iconEmoji: "üëÅÔ∏è",
    technologies: ["OpenCV", "Java", "JavaFX", "Computer Vision", "Real-time Processing"],
    github: "https://github.com/Arpita31/Ball-imageProcessing-opencv"
  },
  {
    title: "LeoZen Bot - Motivational Discord Companion",
    description: "Engineered a dynamic Discord bot for enhanced user engagement through real-time motivational quotes. Integrated zenquotes.io using custom web scraping scripts and Discord API for automated content delivery and seamless chat interaction.",
    icon: `${baseUrl}project-leozen.png`, // üìò Customize or update image as needed
    iconEmoji: "üí¨",
    technologies: ["Python", "Discord API", "BeautifulSoup", "Requests", "Web Scraping", "zenquotes.io"],
    github: "https://github.com/Arpita31/LeoZenbot"
  }

];
---

<Layout title="Arpita Patnaik - ML/AI Engineer | Portfolio">
    <PerformanceOptimizer />
    
    <!-- Background Mesh -->
    <div class="mesh-bg"></div>
    
    <!-- Shooting Stars -->
    <div class="stars" id="static-stars"></div>
    <div class="shooting-stars" id="shooting-stars"></div>
    
    <!-- Navigation -->
    <nav>
        <ul>
            <li><a href={`${baseUrl}`}>Home</a></li>
            <li><a href={`${baseUrl}blog`}>Blog</a></li>
            <li><a href="#about">About</a></li>
            <li><a href="#skills">Skills</a></li>
            <li><a href="#projects">Projects</a></li>
            <li><a href="#experience">Experience</a></li>
            <li><a href="#contact">Contact</a></li>
        </ul>
    </nav>

    <!-- Hero Section with Lottie Animation -->
    <section id="home" class="hero">
        <div class="hero-content-wrapper">
            <div class="hero-text">
                <h1>{personalInfo.name}</h1>
                <p class="subtitle">{personalInfo.title}</p>
                <p class="description">{personalInfo.description}</p>
                <div class="cta-buttons">
                    <a href="#projects" class="btn btn-primary">Explore My Projects</a>
                    <a href="#contact" class="btn btn-secondary">Let's Connect</a>
                </div>
            </div>
            
            <div class="hero-visual">
                <!-- Lottie Animation Container -->
                <div id="lottie-container" class="lottie-animation"></div>
                
                <!-- Achievement Stats -->
                <div class="achievement-badges">
                    {personalInfo.achievements.map((achievement, index) => (
                        <div class={`badge badge-${index + 1}`}>
                            <div class="badge-value">{achievement.value}</div>
                            <div class="badge-label">{achievement.label}</div>
                        </div>
                    ))}
                </div>
            </div>
        </div>
        
        <div class="tech-float">üß†</div>
        <div class="tech-float">‚ö°</div>
        <div class="tech-float">üöÄ</div>
        <div class="tech-float">üî•</div>
    </section>

    <!-- About Section -->
    <section id="about" class="fade-in">
        <h2 class="section-title">About Me</h2>
        <div class="about-grid">
            <div class="about-text">
                <h3>Innovation-Driven ML/AI/Software Engineer</h3>
                <p>
                    I‚Äôm a results-driven ML/AI Engineer and seasoned Software Developer with over 5 years of professional experience architecting intelligent, scalable systems in production. My expertise spans backend development, machine learning, NLP, and computer vision‚Äîbuilding enterprise-grade solutions that serve millions. I specialize in creating robust architectures and deploying high-performance applications that drive measurable impact.
                </p>
                <br>
                <p>
                    Recently graduated with a Master‚Äôs in Computer Science from the University of Florida (GPA: 3.63/4), I‚Äôve led impactful projects in sentiment-aware recommendation engines, privacy-focused NLP platforms, and real-time image processing systems. I‚Äôm passionate about applying AI to solve real-world challenges, and I thrive at the intersection of deep tech, clean system design, and business value‚Äîdelivering solutions that are innovative, secure, and production-ready.
                </p>
                <br>
                <div class="code-block">
                    <code>
                        const expertise = ["AI/ML Engineering", "Scalable Backend Systems", "Intelligent Data Platforms"];
                        <br/>
                        const mission = "Design intelligent technologies that empower people, uplift lives, and solve meaningful problems."; 
                    </code>
                </div>
            </div>
            <div class="stats-grid">
                <div class="stat-card">
                    <span class="stat-number">75%</span>
                    <div class="stat-label">P90 Latency Reduction</div>
                </div>
                <div class="stat-card">
                    <span class="stat-number">5+</span>
                    <div class="stat-label">Years Production Experience</div>
                </div>
                <div class="stat-card">
                    <span class="stat-number">10+</span>
                    <div class="stat-label">Projects Deployed</div>
                </div>
                <div class="stat-card">
                    <span class="stat-number">3.63</span>
                    <div class="stat-label">Graduate GPA</div>
                </div>
            </div>
        </div>
    </section>

    <!-- Skills Section -->
    <section id="skills" class="fade-in">
        <h2 class="section-title">Technical Arsenal</h2>
        <div class="skills-grid">
            <div class="skill-category">
                <h3>ü§ñ Machine Learning & AI</h3>
                <div class="skill-tags">
                    <span class="skill-tag">PyTorch</span>
                    <span class="skill-tag">TensorFlow</span>
                    <span class="skill-tag">scikit-learn</span>
                    <span class="skill-tag">Transformers</span>
                    <span class="skill-tag">RoBERTa</span>
                    <span class="skill-tag">NLP</span>
                    <span class="skill-tag">Computer Vision</span>
                    <span class="skill-tag">OpenCV</span>
                    <span class="skill-tag">NumPy</span>
                    <span class="skill-tag">Pandas</span>
                </div>
            </div>
            <div class="skill-category">
                <h3>‚ö° Backend & Systems</h3>
                <div class="skill-tags">
                    <span class="skill-tag">Python</span>
                    <span class="skill-tag">Django</span>
                    <span class="skill-tag">Flask</span>
                    <span class="skill-tag">RESTful APIs</span>
                    <span class="skill-tag">C#</span>
                    <span class="skill-tag">PostgreSQL</span>
                    <span class="skill-tag">Redis</span>
                    <span class="skill-tag">SQL</span>
                    <span class="skill-tag">Linux</span>
                </div>
            </div>
            <div class="skill-category">
                <h3>üé® Frontend & Full-Stack</h3>
                <div class="skill-tags">
                    <span class="skill-tag">JavaScript</span>
                    <span class="skill-tag">TypeScript</span>
                    <span class="skill-tag">ReactJS</span>
                    <span class="skill-tag">HTML/CSS</span>
                    <span class="skill-tag">Bootstrap</span>
                    <span class="skill-tag">WinForms</span>
                    <span class="skill-tag">WPF</span>
                    <span class="skill-tag">DevExpress</span>
                </div>
            </div>
            <div class="skill-category">
                <h3>üìä DevOps & Cloud</h3>
                <div class="skill-tags">
                    <span class="skill-tag">AWS</span>
                    <span class="skill-tag">Docker</span>
                    <span class="skill-tag">CI/CD</span>
                    <span class="skill-tag">Jenkins</span>
                    <span class="skill-tag">Git</span>
                    <span class="skill-tag">pytest</span>
                    <span class="skill-tag">XUnit</span>
                    <span class="skill-tag">TDD</span>
                    <span class="skill-tag">Postman</span>
                </div>
            </div>
        </div>
    </section>

    <!-- Projects Section - Fixed with 40% Image Layout -->
    <section id="projects" class="fade-in">
        <h2 class="section-title">Featured Projects</h2>
        <div class="projects-grid">
            {projects.map((project, index) => (
                <div class="project-card">
                    <!-- Image section - exactly 40% of card height -->
                    <div class="project-image">
                        <img 
                            src={project.icon} 
                            alt={`${project.title} preview`} 
                            class="project-img"
                            loading="lazy"
                            onload="this.style.opacity = '1';"
                            onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
                            style="opacity: 0; transition: opacity 0.3s ease;"
                        />
                        <!-- Fallback emoji if image fails to load -->
                        <div class="emoji-fallback" style="display: none;">
                            {project.iconEmoji}
                        </div>
                    </div>
                    <!-- Content section - remaining 60% of card height -->
                    <div class="project-content">
                        <div class="project-header">
                            <h3 class="project-title">{project.title}</h3>
                            <p class="project-description">{project.description}</p>
                        </div>
                        
                        <div class="project-footer">
                            <div class="project-tech">
                                {project.technologies.map(tech => (
                                    <span class="tech-tag">{tech}</span>
                                ))}
                            </div>
                            
                            <div class="project-links">
                                <a href={project.github} class="project-link" target="_blank" rel="noopener">
                                    GitHub ‚Üí
                                </a>
                                {/* <a href="#" class="project-link">
                                    Live Demo ‚Üí
                                </a>
                                <a href="#" class="project-link">
                                    Article ‚Üí
                                </a> */}
                            </div>
                        </div>
                    </div>
                </div>
            ))}
        </div>
    </section>

    <!-- Experience Section -->
    <section id="experience" class="fade-in">
        <h2 class="section-title">Professional Journey</h2>
        <div class="experience-timeline">
            <div class="experience-item">
                <div class="experience-date">Aug 2023 - May 2025</div>
                <h3 class="experience-title">Master of Science in Computer Science</h3>
                <div class="experience-company">University of Florida, USA</div>
                <p class="experience-description">
                    Pursuing advanced studies in Machine Learning, Data Engineering, and Computer Network Security while 
                    maintaining 3.63/4.0 GPA. Conducting cutting-edge research in AI systems and earning Achievement Award 
                    Scholarship for academic excellence. Teaching Assistant for Analog Electronic Circuits, mentoring 
                    undergraduate students in complex technical problem-solving.
                </p>
            </div>
            <div class="experience-item">
                <div class="experience-date">Jul 2016 - Aug 2021</div>
                <h3 class="experience-title">Senior Software Engineer</h3>
                <div class="experience-company">Mindtree Ltd. (L&T Technology Services)</div>
                <p class="experience-description">
                    <strong>Performance Engineering:</strong> Achieved 75% P90 latency reduction (20s ‚Üí 5s) for critical user service API 
                    through intelligent Redis caching and smart retry mechanisms, serving millions of users daily.<br><br>
                    
                    <strong>Platform Architecture:</strong> Engineered feature fencing system with Django/Redis admin dashboard enabling 
                    real-time feature control, group-based targeting, and zero-downtime deployments.<br><br>
                    
                    <strong>DevOps & Quality:</strong> Implemented comprehensive CI/CD pipelines, automated deployment processes, and 
                    achieved 75% unit test coverage using XUnit and TypeMock, following enterprise SDLC standards.<br><br>
                    
                    <strong>Full-Stack Development:</strong> Built auto-update components for desktop applications, revamped user 
                    interfaces with Dark Mode themes using DevExpress/WinForms/WPF across 5 Windows applications.
                </p>
            </div>
            <div class="experience-item">
                <div class="experience-date">Aug 2012 - Jun 2016</div>
                <h3 class="experience-title">Bachelor of Technology in Information Technology</h3>
                <div class="experience-company">National Institute of Science and Technology, India</div>
                <p class="experience-description">
                    Graduated with 8.19/10 CGPA with strong foundation in computer science fundamentals, data structures, 
                    algorithms, and software engineering principles. Active in technical leadership roles including 
                    event coordination for large-scale gatherings and technical workshops.
                </p>
            </div>
        </div>
    </section>

    <!-- Contact Section -->
    <section id="contact" class="fade-in">
        <h2 class="section-title">Let's Build the Future Together</h2>
        <div class="contact-content">
            <p class="contact-text">
                I‚Äôm driven by a deep passion for building intelligent systems that solve meaningful, real-world problems at scale. With 5+ years of hands-on experience in production-grade software development and advanced AI/ML applications, I bring both engineering precision and creative problem-solving to every project. Whether you're seeking a Machine Learning Engineer, Backend Systems Architect, or innovative builder of AI-powered solutions, I‚Äôm excited to explore how we can create technology that truly makes a difference.
            </p>
            <div class="contact-links">
                <a href={`mailto:${personalInfo.email}`} class="contact-link">
                    üìß {personalInfo.email}
                </a>
                <a href={personalInfo.linkedin} class="contact-link" target="_blank" rel="noopener">
                    üíº LinkedIn
                </a>
                <a href={personalInfo.github} class="contact-link" target="_blank" rel="noopener">
                    üíª GitHub
                </a>
                <a href={`${baseUrl}resume.pdf`} class="contact-link">
                    üìÑ Resume
                </a>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer>
        <p>&copy; 2025 {personalInfo.name}. Built with ‚ù§Ô∏è and cutting-edge technology. AWS Certified Cloud Practitioner.</p>
    </footer>

    <script define:vars={{ baseUrl }}>
        // üéØ FIXED LOTTIE ANIMATION LOADER with correct base URL
        function loadLottieAnimation() {
            const script = document.createElement('script');
            script.src = 'https://cdnjs.cloudflare.com/ajax/libs/lottie-web/5.12.2/lottie.min.js';
            script.onload = function() {
                const container = document.getElementById('lottie-container');
                if (container && window.lottie) {
                    try {
                        const animation = window.lottie.loadAnimation({
                            container: container,
                            renderer: 'svg',
                            loop: true,
                            autoplay: true,
                            path: `${baseUrl}/public/developer_animation.json` // ‚úÖ FIXED: Using correct base URL
                        });
                        
                        // Add hover effects
                        container.addEventListener('mouseenter', () => {
                            animation.setSpeed(1.5);
                        });
                        container.addEventListener('mouseleave', () => {
                            animation.setSpeed(1);
                        });
                        
                        // Handle loading errors gracefully
                        animation.addEventListener('data_failed', () => {
                            console.error('Failed to load Lottie animation');
                            container.innerHTML = `
                                <div style="display: flex; align-items: center; justify-content: center; height: 100%; font-size: 4rem; color: var(--text-accent);">
                                    üë©üèª‚Äçüíª
                                </div>
                            `;
                        });
                        
                        // Success callback
                        animation.addEventListener('data_ready', () => {
                            console.log('‚úÖ Lottie animation loaded successfully!');
                        });
                    } catch (error) {
                        console.error('Error initializing Lottie:', error);
                        container.innerHTML = `
                            <div style="display: flex; align-items: center; justify-content: center; height: 100%; font-size: 4rem; color: var(--text-accent);">
                                üë©üèª‚Äçüíª
                            </div>
                        `;
                    }
                }
            };
            
            script.onerror = function() {
                console.error('Failed to load Lottie library');
                const container = document.getElementById('lottie-container');
                if (container) {
                    container.innerHTML = `
                        <div style="display: flex; align-items: center; justify-content: center; height: 100%; font-size: 4rem; color: var(--text-accent);">
                            üë©üèª‚Äçüíª
                        </div>
                    `;
                }
            };
            
            document.head.appendChild(script);
        }

        // Load animation when page is ready
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', loadLottieAnimation);
        } else {
            loadLottieAnimation();
        }

        // Smooth scrolling for navigation links
        document.querySelectorAll('nav a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({ behavior: 'smooth', block: 'start' });
                }
            });
        });

        // Intersection Observer for fade-in animations
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                }
            });
        }, observerOptions);

        document.querySelectorAll('.fade-in').forEach(el => {
            observer.observe(el);
        });

        // Dynamic typing effect for hero subtitle
        const subtitleElement = document.querySelector('.hero .subtitle');
        if (subtitleElement) {
            const roles = [
                'AI Engineer',
                'Machine Learning Engineer',
                'Senior Software Developer',
                'Backend Architect',
                'NLP Specialist',
                'Data Science Expert',
                'Full-Stack AI Developer',
            ];
            let currentRoleIndex = 0;
            let isDeleting = false;
            let currentText = '';
            let typeSpeed = 100;

            function typeEffect() {
                const currentRole = roles[currentRoleIndex];
                
                if (isDeleting) {
                    currentText = currentRole.substring(0, currentText.length - 1);
                    typeSpeed = 50;
                } else {
                    currentText = currentRole.substring(0, currentText.length + 1);
                    typeSpeed = 100;
                }

                subtitleElement.textContent = currentText;

                if (!isDeleting && currentText === currentRole) {
                    typeSpeed = 2000;
                    isDeleting = true;
                } else if (isDeleting && currentText === '') {
                    isDeleting = false;
                    currentRoleIndex = (currentRoleIndex + 1) % roles.length;
                    typeSpeed = 500;
                }

                setTimeout(typeEffect, typeSpeed);
            }

            setTimeout(typeEffect, 2000);
        }

        // Add active nav indicator
        window.addEventListener('scroll', () => {
            const sections = document.querySelectorAll('section[id]');
            const navLinks = document.querySelectorAll('nav a');
            
            let current = '';
            sections.forEach(section => {
                const sectionTop = section.offsetTop;
                if (scrollY >= sectionTop - 200) {
                    current = section.getAttribute('id');
                }
            });

            navLinks.forEach(link => {
                link.classList.remove('active');
                if (link.getAttribute('href') === `#${current}`) {
                    link.classList.add('active');
                }
            });
        });

        // Add parallax effect to hero background
        window.addEventListener('scroll', () => {
            const scrolled = window.pageYOffset;
            const parallax = document.querySelector('.mesh-bg');
            if (parallax) {
                parallax.style.transform = `translateY(${scrolled * 0.5}px)`;
            }
        });

        // ‚úÖ SHOOTING STARS IMPLEMENTATION
        const shootingStarsConfig = {
            maxShootingStars: 4,
            maxStaticStars: 120,
            shootingStarInterval: 4000,
            colors: ['default', 'blue', 'purple', 'gold'],
            sizes: ['small', 'medium', 'large'],
            sizeWeights: [0.6, 0.3, 0.1]
        };

        let activeShootingStars = 0;
        let shootingStarInterval;
        let isPageVisible = true;

        // Create static twinkling stars
        function createStaticStars() {
            const starsContainer = document.getElementById('static-stars');
            if (!starsContainer) return;
            
            for (let i = 0; i < shootingStarsConfig.maxStaticStars; i++) {
                const star = document.createElement('div');
                star.className = 'star';
                
                star.style.left = Math.random() * 100 + '%';
                star.style.top = Math.random() * 100 + '%';
                star.style.animationDelay = Math.random() * 3 + 's';
                star.style.animationDuration = (Math.random() * 4 + 2) + 's';
                star.style.opacity = Math.random() * 0.5 + 0.2;
                
                starsContainer.appendChild(star);
            }
        }

        // Get random size with weighted probability
        function getRandomStarSize() {
            const random = Math.random();
            let cumulativeWeight = 0;
            
            for (let i = 0; i < shootingStarsConfig.sizes.length; i++) {
                cumulativeWeight += shootingStarsConfig.sizeWeights[i];
                if (random <= cumulativeWeight) {
                    return shootingStarsConfig.sizes[i];
                }
            }
            
            return shootingStarsConfig.sizes[0];
        }

        // Create individual shooting star with longer tail
        function createLongShootingStar() {
            if (activeShootingStars >= shootingStarsConfig.maxShootingStars || !isPageVisible) return;
            
            const container = document.getElementById('shooting-stars');
            if (!container) return;
            
            const shootingStar = document.createElement('div');
            const size = getRandomStarSize();
            const color = shootingStarsConfig.colors[Math.floor(Math.random() * shootingStarsConfig.colors.length)];
            
            shootingStar.className = `shooting-star ${size} ${color}`;
            
            // Better positioning for more natural shooting star paths
            const startFromTop = Math.random() > 0.2; // 80% from top
            
            if (startFromTop) {
                shootingStar.style.left = (Math.random() * 70 + 15) + '%'; // 15-85%
                shootingStar.style.top = '-20px';
            } else {
                shootingStar.style.left = '105%';
                shootingStar.style.top = Math.random() * 30 + '%'; // Upper third
            }
            
            // Varied animation duration for more natural feel
            const duration = Math.random() * 2.5 + 4; // 4-6.5 seconds (longer for longer tails)
            shootingStar.style.animationDuration = duration + 's';
            
            container.appendChild(shootingStar);
            activeShootingStars++;
            
            // Clean up after animation
            setTimeout(() => {
                if (shootingStar.parentNode) {
                    shootingStar.parentNode.removeChild(shootingStar);
                    activeShootingStars--;
                }
            }, duration * 1000);
        }

        // Start automatic shooting star creation
        function startShootingStars() {
            if (shootingStarInterval) return;
            
            shootingStarInterval = setInterval(() => {
                if (Math.random() > 0.3) { // 70% chance
                    createLongShootingStar();
                }
            }, shootingStarsConfig.shootingStarInterval);
        }

        // Stop shooting star creation
        function stopShootingStars() {
            if (shootingStarInterval) {
                clearInterval(shootingStarInterval);
                shootingStarInterval = null;
            }
        }

        // Mobile optimization for shooting stars
        function optimizeShootingStarsForDevice() {
            if (window.innerWidth < 768) {
                shootingStarsConfig.maxShootingStars = 2;
                shootingStarsConfig.maxStaticStars = 60;
                shootingStarsConfig.shootingStarInterval = 6000;
            }
        }

        // Initialize shooting stars
        function initShootingStars() {
            // Check for reduced motion preference
            if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
                return;
            }
            
            optimizeShootingStarsForDevice();
            createStaticStars();
            startShootingStars();
            
            // Create initial shooting stars with staggered timing
            setTimeout(() => createLongShootingStar(), 2000);
            setTimeout(() => createLongShootingStar(), 4000);
        }

        // Handle page visibility for performance
        document.addEventListener('visibilitychange', () => {
            isPageVisible = !document.hidden;
            
            if (isPageVisible) {
                startShootingStars();
            } else {
                stopShootingStars();
            }
        });

        // Easter egg: Press 'S' for shooting star burst
        document.addEventListener('keydown', (e) => {
            if (e.key.toLowerCase() === 's' && !e.ctrlKey && !e.metaKey && !e.altKey) {
                // Create a burst of shooting stars
                for (let i = 0; i < 6; i++) {
                    setTimeout(() => createLongShootingStar(), i * 300);
                }
            }
        });

        // Initialize shooting stars after other animations
        setTimeout(initShootingStars, 1000);
    </script>
</Layout>